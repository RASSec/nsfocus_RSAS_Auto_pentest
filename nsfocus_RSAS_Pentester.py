#coding=utf-8
#!/usr/bin/env python
import sys
import os
import re
import time
import httplib
import Queue
import socket
import threading
'''
01000001 01110101 01110100 01101111  01101001 01101110 01100110 01101111 01110010
01100011 01101111 01101100 01101100 01100101 01100011 01110100 01101001 01101111 01101110   
* @file: port_filter_RSAS for NSFOCUS RSAS V5-V6                          
* @author: RASsec
* @Date: 2016-07-31 21:41:13								 
'''
reload(sys)
sys.setdefaultencoding("utf-8")
filename='port.txt'
result_file='demo.html'
ok_ports=[]
htmldoc="index.html"
temporary_ports=[]
portfale=['port','html']
ips=[]
headers={"Content-type":"application/x-www-form-urlencoded",
"Accept":"text/plain"
}
lock=threading.Lock()
def init_file():
	if os.path.exists(filename):
		print "[+] Found file live: %s" %filename
		print '[+] Delete %s\n' %filename
		os.remove(filename)
	if os.path.exists(result_file):
		print "[+] Found file live: %s" %result_file
		print '[+] Delete %s\n' %result_file
		os.remove(result_file)
		with open('demo.html','a') as fdemoresult:
			fdemoresult.write('''<html lang="zh-cn"><head><meta charset="utf-8" /> <HEAD><title>输出结果</title> </HEAD>''')
	pass
def path_file(path):
	global ips
	for dirpath,dirnames,filenames in os.walk(path):

	    for file in filenames:
	            fullpath=os.path.join(dirpath,file)
	            if 'html' in fullpath:
	            	m_ip=re.findall(r'\d+\.\d+\.\d+\.\d+', file)
	            	if len(m_ip):
	            		for ip in m_ip:
	            			ips.append(ip)
	            	scan_port(fullpath)


def scan_port(path_file_name):
	if 'index.html' in path_file_name:
		pass
	else:
		try:
			f1=open(path_file_name)
			v56=f1.read()
			if "titlepic" in v56:
				m = re.findall(r'<td>(\d+?)</td><td>',v56)
			else:
				m = re.findall(r'<td class="vul_port">(\d+?)</td>',v56)
			if len(m)>0:
				for portt in m:
					temporary_ports.append(portt)
		except Exception, e:
			raise e



def log_file(anonymous,port_ok):
	if anonymous=='port':
		try:
			pass
			with open(filename,'a') as fwrite:
				fwrite.write(port_ok)
				fwrite.write(',')
		except Exception, e:
			raise e

	else:
		with open(htmldoc,'a') as fhtmlwrite:
			fhtmlwrite.write(port_ok)

def port_ff():
	ids = temporary_ports
	for id in ids:
	    if id not in ok_ports:
	        ok_ports.append(id)
	        log_file(portfale[0],id)
	print '[+] GET ips......'
	for ip in ips:
		print ip
	print ok_ports,'\n[+] Port Count:',len(ok_ports)
	print '\n[+] IP Count:',len(ips)

	log_file(portfale[1],'port count'+','.join(ok_ports))
def main():
	if len(sys.argv) < 2:
		print '''
01000001 01110101 01110100 01101111  01101001 01101110 01100110 01101111 01110010
01100011 01101111 01101100 01101100 01100101 01100011 01110100 01101001 01101111 01101110   
* @file: port_test_RSAS for NSFOCUS RSAS  V5-V6
* @author: RASsec
* @Date: 2016-07-31 21:41:13								 
'''
		print '''eg:nsfocus_port_pen.exe d:\NSFOUCS_report'''
		sys.exit()
	else:
		path=sys.argv[1]
		path_file(path)
	pass

'''
扫描信息

'''
class mythread(threading.Thread):
	"""docstring for mythread"""
	def __init__(self,queue):
		threading.Thread.__init__(self)
		self.queue=queue



	def run(self):
		while not self.queue.empty():
			host = self.queue.get()
			lock.acquire()
			try:
				getinfo(host)
			except Exception ,e:
				print e
			lock.release()

def getinfo(host):
	with open('demo.html','a') as fwrite:
		fwrite.write('<DIV ><b>[+]%s</a></b></DIV>' %(host)) 
		fwrite.write('  <DIV id="div%s">' %(host))
		fwrite.write('\n')
	for port in ok_ports:
		try:
			try:
				cc=httplib.HTTPConnection(host,port,False,1)
				cc.request('GET','/')
				r=cc.getresponse()
				rr=r.read()
				rec=re.search('<title>(.*?)</title>',rr,re.IGNORECASE)
				if rec is None:
					pass
				else:
					with open('demo.html','a') as fwrite:
						fwrite.write(' <table border="1"><tr> <td><a href="http://%s:%s" target="_blank">%s</a></td><td>%s</td>  <td> %s </td><td> %s </td><td> %s </td></tr></table>\n' %(host,port,host,port,r.getheader('Server'),r.status,rec.group(1)))
						
					print host,port,r.getheader('Server'),r.status,rec.group(1)
					pass
			except:
				print host,port,'no found!'
		except Exception, e:
			raise e
	with open('demo.html','a') as fwrite:
		fwrite.write('</div>')
def scan_rassec():
    threadl = []
    queue=Queue.Queue()
    for ip in ips:
    	queue.put(ip)
    for x in xrange(0, 50):
    	threadl.append(mythread(queue))
    for t in threadl:
        t.start()
    for t in threadl:
        t.join()
	pass


if __name__ == '__main__':
	main()
	init_file()
	print '[+] Port collection......'
	port_ff()
	print '[+] start ips info......'
	print ips
	try:
		scan_rassec()
	except KeyboardInterrupt:
		print 'stop application!'
		sys.exit()
